//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Чайный Гриб\Programming\проект\myLovelyProject\myLovelyProject\arithmetic.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IarithmeticListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class arithmeticBaseListener : IarithmeticListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFile([NotNull] arithmeticParser.FileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFile([NotNull] arithmeticParser.FileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] arithmeticParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] arithmeticParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtom([NotNull] arithmeticParser.AtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtom([NotNull] arithmeticParser.AtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.bool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBool([NotNull] arithmeticParser.BoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.bool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBool([NotNull] arithmeticParser.BoolContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.true"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrue([NotNull] arithmeticParser.TrueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.true"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrue([NotNull] arithmeticParser.TrueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.false"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFalse([NotNull] arithmeticParser.FalseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.false"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFalse([NotNull] arithmeticParser.FalseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] arithmeticParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] arithmeticParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.nameIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNameIdentifier([NotNull] arithmeticParser.NameIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.nameIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNameIdentifier([NotNull] arithmeticParser.NameIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.typeIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeIdentifier([NotNull] arithmeticParser.TypeIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.typeIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeIdentifier([NotNull] arithmeticParser.TypeIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] arithmeticParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] arithmeticParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] arithmeticParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] arithmeticParser.VariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] arithmeticParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] arithmeticParser.NumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.int"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInt([NotNull] arithmeticParser.IntContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.int"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInt([NotNull] arithmeticParser.IntContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.double"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDouble([NotNull] arithmeticParser.DoubleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.double"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDouble([NotNull] arithmeticParser.DoubleContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
