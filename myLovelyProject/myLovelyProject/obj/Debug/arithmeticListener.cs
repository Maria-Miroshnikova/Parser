//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Чайный Гриб\Programming\проект\myLovelyProject\myLovelyProject\arithmetic.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="arithmeticParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IarithmeticListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFile([NotNull] arithmeticParser.FileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFile([NotNull] arithmeticParser.FileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] arithmeticParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] arithmeticParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtom([NotNull] arithmeticParser.AtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtom([NotNull] arithmeticParser.AtomContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBool([NotNull] arithmeticParser.BoolContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBool([NotNull] arithmeticParser.BoolContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.true"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrue([NotNull] arithmeticParser.TrueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.true"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrue([NotNull] arithmeticParser.TrueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.false"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFalse([NotNull] arithmeticParser.FalseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.false"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFalse([NotNull] arithmeticParser.FalseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] arithmeticParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] arithmeticParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.nameIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameIdentifier([NotNull] arithmeticParser.NameIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.nameIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameIdentifier([NotNull] arithmeticParser.NameIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.typeIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeIdentifier([NotNull] arithmeticParser.TypeIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.typeIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeIdentifier([NotNull] arithmeticParser.TypeIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] arithmeticParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] arithmeticParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] arithmeticParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] arithmeticParser.VariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] arithmeticParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] arithmeticParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.int"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt([NotNull] arithmeticParser.IntContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.int"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt([NotNull] arithmeticParser.IntContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="arithmeticParser.double"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDouble([NotNull] arithmeticParser.DoubleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="arithmeticParser.double"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDouble([NotNull] arithmeticParser.DoubleContext context);
}
